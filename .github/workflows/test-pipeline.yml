name: Basic Test Pipeline

on:
  pull_request:
  push:
    branches: [ "week-2-test-pipeline"]

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Node Setup (incl. caching)
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies 
        working-directory: frontend
        run: |
          npm ci
          npm install react-router-dom jest-junit --no-save

      - name: Run Frontend tests
        working-directory: frontend
        run: |
          mkdir -p test-results
          npm test -- --ci --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT_DIR: test-results
          CI: true

      - name: Upload test result reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: frontend/test-results/

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Python Setup (incl. caching)
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov boto3 moto

      - name: Run backend tests
        working-directory: backend
        run: |
          mkdir -p test-results
          pytest --maxfail=1 --disable-warnings --junitxml=test-results/results.xml
        env:
          AWS_ACCESS_KEY_ID: fake
          AWS_SECRET_ACCESS_KEY: fake
          AWS_DEFAULT_REGION: us-east-1

      - name: Upload backend test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: backend/test-results/

  security-scan:
    name: Security & Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dependency Review
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v4

      - name: Audit frontend dependencies
        if: github.event_name != 'pull_request'
        working-directory: frontend
        run: |
          npm ci
          npm audit --audit-level=moderate || true

      - name: Audit backend dependencies
        if: github.event_name != 'pull_request'
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install safety
          safety check || true
